#!/usr/bin/env bash

# Version: 1.3.1

ppas=(
    maveonair/helix-editor
    neovim-ppa/stable
)
deps=( # dependencies for this script, those must be installed first
	software-properties-common
	curl
	git
	wget
	ssh
	grep
)
pkgs=( # actual user packages
	helix
	kakoune
	libcairo2-dev
	libcurl4-openssl-dev
	libfreetype6-dev
	libjpeg-dev
	libpng-dev
	libpq-dev
	libsodium-dev
	libssl-dev
	libtiff5-dev
	make
	neovim
	pandoc
	tmux
	w3m # tested 09/23 and better than lynx, links, elinks and browsh
	w3m-img # image support for w3m (requires terminal with capability for displaying images)
)
skip=( # packages skipped intentionally
	texlive-full # multiple gigabytes
)
BLUE='\033[0;34m'
NORM='\033[0m'
title() { echo -e "${BLUE}$@${NORM}"; }

# Update list of available packages
title "Calling 'apt update'"
sudo apt update

# Install dependencies
title "Installing script dependencies"
sudo apt install -y "${deps[@]}"

# Add PPAs
title "Adding PPAs"
apt_update_required=0
for ppa in "${ppas[@]}"; do
    grep -h "^deb.*$ppa" /etc/apt/sources.list.d/* > /dev/null 2>&1
    if [ $? -ne 0 ]; then
        echo "Adding ppa:$ppa"
        sudo add-apt-repository -y "ppa:$ppa"
        apt_update_required=1
    else
        echo "ppa:$ppa already exists"
    fi
done
if [ $apt_update_required -eq 1 ]; then
    sudo apt update
fi

# Install packages
title "Installing packages"
sudo apt install -y "${pkgs[@]}"

# Configure git
title "Configuring git"
git config --global user.name "Tobias Schmidt"
git config --global user.email "tobias.schmidt331@gmail.com"

# Configure bash
title "Creating '.bashrc', '.bash_aliases' and '.inputrc'"
tmp_dir=$(mktemp -d)
git clone --depth 1 https://github.com/toscm/installers.git "$tmp_dir"
cp "$tmp_dir/.bash_aliases" ~/.bash_aliases
cp "$tmp_dir/.bashrc" ~/.bashrc
cp "$tmp_dir/.inputrc" ~/.inputrc
rm -rf "$tmp_dir"